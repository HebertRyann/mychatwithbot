[{"D:\\heber\\Projetos\\ChatBot\\frontend\\src\\Hooks\\Socket.tsx":"1","D:\\heber\\Projetos\\ChatBot\\frontend\\src\\Pages\\Chat\\index.tsx":"2","D:\\heber\\Projetos\\ChatBot\\frontend\\src\\Components\\FadeUpToDown\\styles.ts":"3","D:\\heber\\Projetos\\ChatBot\\frontend\\src\\Components\\FadeUpToDown\\index.tsx":"4","D:\\heber\\Projetos\\ChatBot\\frontend\\src\\Components\\FadeDownToUp\\styles.ts":"5","D:\\heber\\Projetos\\ChatBot\\frontend\\src\\Components\\FadeDownToUp\\index.tsx":"6","D:\\heber\\Projetos\\ChatBot\\frontend\\src\\App.tsx":"7","D:\\heber\\Projetos\\ChatBot\\frontend\\src\\Router\\Route.tsx":"8","D:\\heber\\Projetos\\ChatBot\\frontend\\src\\Hooks\\Recorder.tsx":"9","D:\\heber\\Projetos\\ChatBot\\frontend\\src\\Components\\NotificationContainer\\index.tsx":"10","D:\\heber\\Projetos\\ChatBot\\frontend\\src\\Components\\AddNewFriends\\styles.ts":"11","D:\\heber\\Projetos\\ChatBot\\frontend\\src\\Components\\Notification\\Toast\\styles.ts":"12","D:\\heber\\Projetos\\ChatBot\\frontend\\src\\Components\\FadeLeftToRigh\\styles.ts":"13","D:\\heber\\Projetos\\ChatBot\\frontend\\src\\Pages\\Dashboard\\index.tsx":"14","D:\\heber\\Projetos\\ChatBot\\frontend\\src\\Components\\AudioPlayer\\styles.ts":"15","D:\\heber\\Projetos\\ChatBot\\frontend\\src\\Components\\AudioPlayer\\index.tsx":"16","D:\\heber\\Projetos\\ChatBot\\frontend\\src\\styles\\GlobalStyles.ts":"17","D:\\heber\\Projetos\\ChatBot\\frontend\\src\\service\\Api.ts":"18","D:\\heber\\Projetos\\ChatBot\\frontend\\src\\Pages\\SignIn\\index.tsx":"19","D:\\heber\\Projetos\\ChatBot\\frontend\\src\\Pages\\SignIn\\styles.ts":"20","D:\\heber\\Projetos\\ChatBot\\frontend\\src\\Components\\Notification\\index.tsx":"21","D:\\heber\\Projetos\\ChatBot\\frontend\\src\\Components\\NotificationContainer\\styles.ts":"22","D:\\heber\\Projetos\\ChatBot\\frontend\\src\\Components\\CreateGroup\\styles.ts":"23","D:\\heber\\Projetos\\ChatBot\\frontend\\src\\Components\\FadeLeftToRigh\\index.tsx":"24","D:\\heber\\Projetos\\ChatBot\\frontend\\src\\Pages\\Chat\\styles.ts":"25","D:\\heber\\Projetos\\ChatBot\\frontend\\src\\Router\\index.tsx":"26","D:\\heber\\Projetos\\ChatBot\\frontend\\src\\styles\\Colors.ts":"27","D:\\heber\\Projetos\\ChatBot\\frontend\\src\\Pages\\Dashboard\\styles.ts":"28","D:\\heber\\Projetos\\ChatBot\\frontend\\src\\Components\\AddNewFriends\\index.tsx":"29","D:\\heber\\Projetos\\ChatBot\\frontend\\src\\Hooks\\Toast.tsx":"30","D:\\heber\\Projetos\\ChatBot\\frontend\\src\\Components\\ModalConfetti\\styles.ts":"31","D:\\heber\\Projetos\\ChatBot\\frontend\\src\\Components\\ModalConfetti\\index.tsx":"32","D:\\heber\\Projetos\\ChatBot\\frontend\\src\\Components\\FadeScale\\styles.ts":"33","D:\\heber\\Projetos\\ChatBot\\frontend\\src\\index.tsx":"34","D:\\heber\\Projetos\\ChatBot\\frontend\\src\\Components\\Notification\\Toast\\index.tsx":"35"},{"size":11827,"mtime":1623850006908,"results":"36","hashOfConfig":"37"},{"size":9685,"mtime":1623850160804,"results":"38","hashOfConfig":"37"},{"size":646,"mtime":1623331665741,"results":"39","hashOfConfig":"40"},{"size":772,"mtime":1623331652247,"results":"41","hashOfConfig":"40"},{"size":644,"mtime":1623331778920,"results":"42","hashOfConfig":"40"},{"size":772,"mtime":1623331791186,"results":"43","hashOfConfig":"40"},{"size":463,"mtime":1620472900982,"results":"44","hashOfConfig":"40"},{"size":882,"mtime":1621001040170,"results":"45","hashOfConfig":"37"},{"size":2015,"mtime":1623160303311,"results":"46","hashOfConfig":"40"},{"size":2741,"mtime":1621473919121,"results":"47","hashOfConfig":"37"},{"size":1999,"mtime":1621599308846,"results":"48","hashOfConfig":"40"},{"size":924,"mtime":1620476202681,"results":"49","hashOfConfig":"37"},{"size":761,"mtime":1621524516144,"results":"50","hashOfConfig":"37"},{"size":6290,"mtime":1623419878768,"results":"51","hashOfConfig":"37"},{"size":647,"mtime":1623669564416,"results":"52","hashOfConfig":"37"},{"size":3605,"mtime":1623671865344,"results":"53","hashOfConfig":"40"},{"size":650,"mtime":1623245759095,"results":"54","hashOfConfig":"37"},{"size":119,"mtime":1621360798478,"results":"55","hashOfConfig":"37"},{"size":1164,"mtime":1621361390950,"results":"56","hashOfConfig":"37"},{"size":817,"mtime":1621361450071,"results":"57","hashOfConfig":"37"},{"size":930,"mtime":1621472025752,"results":"58","hashOfConfig":"37"},{"size":1436,"mtime":1621450559846,"results":"59","hashOfConfig":"37"},{"size":2076,"mtime":1621604543880,"results":"60","hashOfConfig":"37"},{"size":667,"mtime":1621604024818,"results":"61","hashOfConfig":"40"},{"size":5788,"mtime":1623677384410,"results":"62","hashOfConfig":"37"},{"size":513,"mtime":1620828553363,"results":"63","hashOfConfig":"37"},{"size":256,"mtime":1623246055288,"results":"64","hashOfConfig":"40"},{"size":5492,"mtime":1622730064887,"results":"65","hashOfConfig":"40"},{"size":4978,"mtime":1621604494163,"results":"66","hashOfConfig":"37"},{"size":2691,"mtime":1621944607749,"results":"67","hashOfConfig":"37"},{"size":1135,"mtime":1623767923008,"results":"68","hashOfConfig":"40"},{"size":1230,"mtime":1623767639921,"results":"69","hashOfConfig":"37"},{"size":618,"mtime":1623767379062,"results":"70","hashOfConfig":"40"},{"size":208,"mtime":1619956132329,"results":"71","hashOfConfig":"37"},{"size":1886,"mtime":1621473769032,"results":"72","hashOfConfig":"37"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"76"},"1qp27x",{"filePath":"77","messages":"78","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"115os1e",{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"76"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"126","messages":"127","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"134","messages":"135","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"136","messages":"137","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"76"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\heber\\Projetos\\ChatBot\\frontend\\src\\Hooks\\Socket.tsx",["149"],"import React, {\r\n  createContext,\r\n  useCallback,\r\n  useContext,\r\n  useEffect,\r\n  useState,\r\n} from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport { api } from '../service/Api';\r\nimport { useToast, ToastProps } from './Toast';\r\nimport { useUser } from './User';\r\n\r\ninterface SocketContextProps {\r\n  friends: Friends[];\r\n  requests: RequestFriends[];\r\n  notifications: Notifications[];\r\n  allUsers: Users[];\r\n  allMembers: MembersProps[];\r\n  allMessages: MessageProps[];\r\n  room: string;\r\n  rooms: Rooms[];\r\n  chatData: FriendRoomProps;\r\n  selectUsers: string[];\r\n  openModalGroup: boolean;\r\n  openModalCreateGroup: boolean;\r\n  isEmptySelectUsers: boolean;\r\n  usersTyping: TypingProps[];\r\n  hangman: boolean;\r\n  passwordHangman: string[];\r\n  usersHeart: UsersHeartProps[];\r\n  correctLetters: string[];\r\n  currentSong: CurrentSongProps;\r\n  correctMessages: string[];\r\n  loadUsers(): Promise<void>;\r\n  loadRequests(): Promise<void>;\r\n  loadFriends(): Promise<void>;\r\n  sendRequest(friendsName: string): void;\r\n  acceptRequest(friendsID: string): void;\r\n  rejectRequest(friendsID: string): void;\r\n  handleJoinToRoom({ socketName, socketRoom }: RoomProps): void;\r\n  selectUser(id: string): void;\r\n  removeSelectUser(id: string): void;\r\n  rejectRoom(id: string): void;\r\n  multiRequests(groupName?: string): void;\r\n  toggleModalGroup(isOpenModal: boolean): void;\r\n  toggleModalCreateGroup(): void;\r\n  backToFriends(): void;\r\n  backToSelect(): void;\r\n}\r\n\r\ninterface Friends {\r\n  id: string;\r\n  friendName: string;\r\n}\r\ninterface Rooms {\r\n  userName: string;\r\n  room: string;\r\n}\r\ninterface RequestFriends {\r\n  id: string;\r\n  userName: string;\r\n  friendName: string;\r\n  groupName: string;\r\n}\r\ninterface Notifications {\r\n  id: string;\r\n  sender: string;\r\n  recipient: string;\r\n  groupName: string;\r\n  message: string;\r\n}\r\ninterface Users {\r\n  userName: string;\r\n  created_at: string;\r\n}\r\ninterface MessageProps {\r\n  id: string;\r\n  userName: string;\r\n  content: string;\r\n  from: string;\r\n  isAudio?: boolean;\r\n  time: Date;\r\n}\r\ninterface MembersProps {\r\n  userName: string;\r\n  room: string;\r\n}\r\ninterface LoadDataRoomProps {\r\n  members?: MembersProps[];\r\n  messages?: MessageProps[];\r\n  friend_Name?: string;\r\n  userName?: string;\r\n  privateRoom?: string;\r\n}\r\ninterface RoomProps {\r\n  socketName?: string;\r\n  socketRoom?: string;\r\n}\r\ninterface FriendRoomProps {\r\n  friendName: string;\r\n  userName: string;\r\n  privateRoom: string;\r\n}\r\n\r\ninterface TypingProps {\r\n  user: string;\r\n  isTyping: boolean;\r\n}\r\n\r\ninterface UsersHeartProps {\r\n  username: string;\r\n  heart: string[];\r\n}\r\ninterface CurrentSongProps {\r\n  title: string;\r\n  singer: string;\r\n}\r\n\r\nconst SocketContext = createContext<SocketContextProps>(\r\n  {} as SocketContextProps,\r\n);\r\n\r\nexport const SocketProvider: React.FC = ({ children }) => {\r\n  const [friends, setFriends] = useState<Friends[]>([]);\r\n  const [rooms, setRooms] = useState<Rooms[]>([]);\r\n  const [requests, setRequests] = useState<RequestFriends[]>([]);\r\n  const [notifications, setNotifications] = useState<Notifications[]>([]);\r\n  const [allUsers, setAllUsers] = useState<Users[]>([]);\r\n  const [allMembers, setAllMembers] = useState<MembersProps[]>([]);\r\n  const [allMessages, setAllMessages] = useState<MessageProps[]>([]);\r\n  const [room, setRoom] = useState('');\r\n  const [chatData, setChatData] = useState<FriendRoomProps>(\r\n    {} as FriendRoomProps,\r\n  );\r\n  const { addToast } = useToast();\r\n  const { userData, socket } = useUser();\r\n  const history = useHistory();\r\n  const [selectUsers, setSelectUsers] = useState<string[]>([]);\r\n  const [openModalGroup, setOpenModalGroup] = useState(false);\r\n  const [openModalCreateGroup, setOpenModalCreateGroup] = useState(false);\r\n  const [isEmptySelectUsers, setIsEmptySelectUsers] = useState(true);\r\n  const [usersTyping, setUsersTyping] = useState<TypingProps[]>([]);\r\n  const [hangman, setHangman] = useState(false);\r\n  const [passwordHangman, setPasswordHangman] = useState(['']);\r\n  const [usersHeart, setUsersHeart] = useState<UsersHeartProps[]>([]);\r\n  const [correctLetters, setCorrectLetters] = useState(['']);\r\n  const [currentSong, setCurrentSong] = useState<CurrentSongProps>(\r\n    {} as CurrentSongProps,\r\n  );\r\n  const [correctMessages, setCorrectMessages] = useState(['']);\r\n\r\n  const loadUsers = useCallback(async () => {\r\n    const response = await api.get(`/user/${userData.user}`);\r\n    setAllUsers(response.data);\r\n  }, [userData.user]);\r\n\r\n  const loadRequests = useCallback(async () => {\r\n    const response = await api.get(\r\n      `/friend/list/solicitation/${userData.user}`,\r\n    );\r\n    setRequests(response.data.friend);\r\n    setNotifications(response.data.notification);\r\n  }, [userData.user]);\r\n\r\n  const loadFriends = useCallback(async () => {\r\n    const response = await api.get(`/friend/list/${userData.user}`);\r\n    setFriends(response.data.friend);\r\n    setRooms(response.data.rooms);\r\n  }, [userData.user]);\r\n\r\n  const handleJoinToRoom = useCallback(\r\n    ({ socketName, socketRoom }: RoomProps) => {\r\n      setRoom('');\r\n      setChatData({} as FriendRoomProps);\r\n\r\n      const selectRoom = socketName || socketRoom;\r\n      if (!selectRoom) return;\r\n      socket.emit('ClientJoinToRoom', selectRoom, userData.user);\r\n      if (socketRoom) {\r\n        setRoom(selectRoom);\r\n      }\r\n\r\n      history.push('/chat');\r\n    },\r\n    [history, socket, userData.user],\r\n  );\r\n  const rejectRoom = useCallback(\r\n    (id: string) => {\r\n      socket.emit('ClientRejectRoom', id);\r\n    },\r\n    [socket],\r\n  );\r\n\r\n  const sendRequest = useCallback(\r\n    (friendsName: string, message?: string, groupName?: string) => {\r\n      socket?.emit('ClientSendRequest', {\r\n        userName: userData?.user,\r\n        friendUserName: friendsName,\r\n        message,\r\n        groupName,\r\n      });\r\n    },\r\n    [socket, userData?.user],\r\n  );\r\n  const acceptRequest = useCallback(\r\n    (friendsID: string) => {\r\n      socket.emit('ClientAcceptRequest', friendsID);\r\n      loadFriends();\r\n      loadUsers();\r\n      loadRequests();\r\n    },\r\n    [loadFriends, loadRequests, loadUsers, socket],\r\n  );\r\n  const rejectRequest = useCallback(\r\n    (friendsID: string) => {\r\n      socket.emit('ClientRejectRequest', friendsID);\r\n    },\r\n    [socket],\r\n  );\r\n  const catchRequests = useCallback(\r\n    ({ id, sender, userName, message, groupName }: ToastProps) => {\r\n      loadRequests();\r\n      addToast({\r\n        id,\r\n        sender,\r\n        userName,\r\n        message,\r\n        groupName,\r\n      });\r\n      console.log('Refresh sed request');\r\n    },\r\n    [addToast, loadRequests],\r\n  );\r\n\r\n  const selectUser = useCallback(\r\n    (id: string) => {\r\n      setSelectUsers([...selectUsers, id]);\r\n    },\r\n    [selectUsers],\r\n  );\r\n  const removeSelectUser = useCallback(\r\n    (id: string) => {\r\n      const filterUser = selectUsers.filter(user => user !== id);\r\n      setSelectUsers(filterUser);\r\n    },\r\n    [selectUsers],\r\n  );\r\n\r\n  const toggleModalGroup = useCallback((isOpenModal: boolean) => {\r\n    setOpenModalGroup(isOpenModal);\r\n  }, []);\r\n\r\n  const toggleModalCreateGroup = useCallback(() => {\r\n    setOpenModalCreateGroup(!openModalCreateGroup);\r\n  }, [openModalCreateGroup]);\r\n\r\n  const multiRequests = useCallback(\r\n    (groupName?: string) => {\r\n      socket.emit('ClientCreateGroup', {\r\n        userName: userData.user,\r\n        room: groupName,\r\n      });\r\n      selectUsers.map(user =>\r\n        sendRequest(user, 'Te Convidou para um grupo', groupName),\r\n      );\r\n      toggleModalGroup(false);\r\n      setSelectUsers([]);\r\n      toggleModalCreateGroup();\r\n    },\r\n    [\r\n      selectUsers,\r\n      sendRequest,\r\n      socket,\r\n      toggleModalCreateGroup,\r\n      toggleModalGroup,\r\n      userData.user,\r\n    ],\r\n  );\r\n\r\n  const backToFriends = useCallback(() => {\r\n    setOpenModalGroup(false);\r\n    setSelectUsers([]);\r\n  }, []);\r\n\r\n  const backToSelect = useCallback(() => {\r\n    setOpenModalCreateGroup(false);\r\n    setSelectUsers([]);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    socket?.on(\r\n      'ServerResponseSendRequest',\r\n      ({ id, sender, userName, message, groupName }: ToastProps) => {\r\n        catchRequests({\r\n          id,\r\n          sender,\r\n          userName,\r\n          message,\r\n          groupName,\r\n        });\r\n      },\r\n    );\r\n  }, [catchRequests, socket]);\r\n\r\n  useEffect(() => {\r\n    socket?.on(\r\n      'ClientLoadAllData',\r\n      ({\r\n        friend_Name,\r\n        members,\r\n        messages,\r\n        userName,\r\n        privateRoom,\r\n      }: LoadDataRoomProps) => {\r\n        if (members) {\r\n          setAllMembers(members);\r\n        }\r\n        if (messages) {\r\n          setAllMessages(messages);\r\n        }\r\n        if (friend_Name && userName && privateRoom) {\r\n          setChatData({ friendName: friend_Name, userName, privateRoom });\r\n        }\r\n      },\r\n    );\r\n  }, [socket]);\r\n\r\n  useEffect(() => {\r\n    if (selectUsers.length) {\r\n      setIsEmptySelectUsers(false);\r\n    } else {\r\n      setIsEmptySelectUsers(true);\r\n      backToSelect();\r\n    }\r\n  }, [backToSelect, isEmptySelectUsers, selectUsers.length]);\r\n\r\n  useEffect(() => {\r\n    socket.on('ServerReceivedMessage', (data: MessageProps) => {\r\n      setAllMessages([...allMessages, data]);\r\n    });\r\n  }, [allMessages, socket]);\r\n\r\n  useEffect(() => {\r\n    socket?.on('ServerResponseRefreshFriends', () => {\r\n      loadFriends();\r\n      loadUsers();\r\n      loadRequests();\r\n    });\r\n  }, [loadFriends, loadRequests, loadUsers, socket]);\r\n\r\n  useEffect(() => {\r\n    socket?.on('ServerResponseRefreshUsers', () => {\r\n      loadUsers();\r\n    });\r\n  }, [loadUsers, socket]);\r\n\r\n  useEffect(() => {\r\n    socket.on('ServerResponseIsTyping', (usersIsTyping: TypingProps[]) => {\r\n      setUsersTyping(usersIsTyping);\r\n    });\r\n  }, [socket, usersTyping]);\r\n\r\n  useEffect(() => {\r\n    socket.on('ServerResponseSetHangman', (isHangman: boolean) => {\r\n      setHangman(isHangman);\r\n    });\r\n  }, [socket]);\r\n\r\n  useEffect(() => {\r\n    socket.on('ServerResponseSetPasswordHangman', (password: string[]) => {\r\n      setPasswordHangman(password);\r\n    });\r\n  }, [socket]);\r\n\r\n  useEffect(() => {\r\n    socket.on('ServerResponseSetUsersHeart', (heart: UsersHeartProps[]) => {\r\n      setUsersHeart(heart);\r\n    });\r\n  }, [socket]);\r\n\r\n  useEffect(() => {\r\n    socket.on('ServerResponseCorrectLetter', (letters: string[]) => {\r\n      setCorrectLetters(letters);\r\n    });\r\n  }, [socket]);\r\n\r\n  useEffect(() => {\r\n    socket.on('ServerSetCurrentSong', (song: CurrentSongProps) => {\r\n      setCurrentSong(song);\r\n    });\r\n  }, [socket]);\r\n\r\n  useEffect(() => {\r\n    socket.on('ServerCorrectMessages', (messagesCorrect: string[]) => {\r\n      setCorrectMessages(messagesCorrect);\r\n    });\r\n  }, [socket]);\r\n\r\n  return (\r\n    <SocketContext.Provider\r\n      value={{\r\n        allUsers,\r\n        friends,\r\n        requests,\r\n        loadFriends,\r\n        loadRequests,\r\n        loadUsers,\r\n        acceptRequest,\r\n        rejectRequest,\r\n        sendRequest,\r\n        handleJoinToRoom,\r\n        allMembers,\r\n        allMessages,\r\n        room,\r\n        rooms,\r\n        chatData,\r\n        selectUser,\r\n        selectUsers,\r\n        multiRequests,\r\n        removeSelectUser,\r\n        notifications,\r\n        rejectRoom,\r\n        openModalCreateGroup,\r\n        openModalGroup,\r\n        toggleModalCreateGroup,\r\n        toggleModalGroup,\r\n        backToFriends,\r\n        backToSelect,\r\n        isEmptySelectUsers,\r\n        usersTyping,\r\n        hangman,\r\n        passwordHangman,\r\n        usersHeart,\r\n        correctLetters,\r\n        currentSong,\r\n        correctMessages,\r\n      }}\r\n    >\r\n      {children}\r\n    </SocketContext.Provider>\r\n  );\r\n};\r\n\r\nexport function useSocket(): SocketContextProps {\r\n  const context = useContext(SocketContext);\r\n\r\n  if (!context) {\r\n    throw new Error('useUser must be used whitin an UserProvider');\r\n  }\r\n  return context;\r\n}\r\n",["150","151","152","153","154"],"D:\\heber\\Projetos\\ChatBot\\frontend\\src\\Pages\\Chat\\index.tsx",["155","156","157","158","159","160","161","162","163","164","165"],"D:\\heber\\Projetos\\ChatBot\\frontend\\src\\Components\\FadeUpToDown\\styles.ts",[],"D:\\heber\\Projetos\\ChatBot\\frontend\\src\\Components\\FadeUpToDown\\index.tsx",[],["166","167","168","169","170"],"D:\\heber\\Projetos\\ChatBot\\frontend\\src\\Components\\FadeDownToUp\\styles.ts",[],["171","172","173","174","175"],"D:\\heber\\Projetos\\ChatBot\\frontend\\src\\Components\\FadeDownToUp\\index.tsx",[],"D:\\heber\\Projetos\\ChatBot\\frontend\\src\\App.tsx",["176"],"D:\\heber\\Projetos\\ChatBot\\frontend\\src\\Router\\Route.tsx",[],"D:\\heber\\Projetos\\ChatBot\\frontend\\src\\Hooks\\Recorder.tsx",["177","178","179"],"D:\\heber\\Projetos\\ChatBot\\frontend\\src\\Components\\NotificationContainer\\index.tsx",["180","181","182","183","184","185"],"D:\\heber\\Projetos\\ChatBot\\frontend\\src\\Components\\AddNewFriends\\styles.ts",["186"],"D:\\heber\\Projetos\\ChatBot\\frontend\\src\\Components\\Notification\\Toast\\styles.ts",[],"D:\\heber\\Projetos\\ChatBot\\frontend\\src\\Components\\FadeLeftToRigh\\styles.ts",[],"D:\\heber\\Projetos\\ChatBot\\frontend\\src\\Pages\\Dashboard\\index.tsx",["187","188","189","190","191","192","193","194","195","196","197","198","199","200","201","202","203"],"D:\\heber\\Projetos\\ChatBot\\frontend\\src\\Components\\AudioPlayer\\styles.ts",["204","205"],"D:\\heber\\Projetos\\ChatBot\\frontend\\src\\Components\\AudioPlayer\\index.tsx",["206","207","208","209","210","211"],"D:\\heber\\Projetos\\ChatBot\\frontend\\src\\styles\\GlobalStyles.ts",[],"D:\\heber\\Projetos\\ChatBot\\frontend\\src\\service\\Api.ts",[],"D:\\heber\\Projetos\\ChatBot\\frontend\\src\\Pages\\SignIn\\index.tsx",["212","213","214","215","216"],"import React, { useCallback, useEffect, useRef, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Container, FormContainer } from './styles';\r\nimport { useUser } from '../../Hooks/User';\r\n\r\nconst SignIn: React.FC = () => {\r\n  const [inputValue, setInputValue] = useState('');\r\n  const { signIn } = useUser();\r\n  const { push } = useHistory();\r\n\r\n  async function handleConnection() {\r\n    if (!inputValue) return;\r\n\r\n    try {\r\n      await signIn(inputValue.toLowerCase());\r\n      setInputValue('');\r\n      push('/dashboard');\r\n    } catch (error) {\r\n      console.log(error);\r\n      alert('Usuario nao foi criado tente novamente');\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <FormContainer>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Seu Nome\"\r\n          value={inputValue}\r\n          onChange={event => setInputValue(event.target.value)}\r\n          onKeyPress={event => event.key === 'Enter' && handleConnection()}\r\n        />\r\n        <button onClick={handleConnection} type=\"button\">\r\n          Entrar\r\n        </button>\r\n      </FormContainer>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default SignIn;\r\n","D:\\heber\\Projetos\\ChatBot\\frontend\\src\\Pages\\SignIn\\styles.ts",[],"D:\\heber\\Projetos\\ChatBot\\frontend\\src\\Components\\Notification\\index.tsx",["217","218"],"D:\\heber\\Projetos\\ChatBot\\frontend\\src\\Components\\NotificationContainer\\styles.ts",["219","220"],"D:\\heber\\Projetos\\ChatBot\\frontend\\src\\Components\\CreateGroup\\styles.ts",[],"D:\\heber\\Projetos\\ChatBot\\frontend\\src\\Components\\FadeLeftToRigh\\index.tsx",["221"],"D:\\heber\\Projetos\\ChatBot\\frontend\\src\\Pages\\Chat\\styles.ts",["222","223"],"D:\\heber\\Projetos\\ChatBot\\frontend\\src\\Router\\index.tsx",[],"D:\\heber\\Projetos\\ChatBot\\frontend\\src\\styles\\Colors.ts",[],"D:\\heber\\Projetos\\ChatBot\\frontend\\src\\Pages\\Dashboard\\styles.ts",["224","225"],"D:\\heber\\Projetos\\ChatBot\\frontend\\src\\Components\\AddNewFriends\\index.tsx",["226","227","228"],"D:\\heber\\Projetos\\ChatBot\\frontend\\src\\Hooks\\Toast.tsx",["229","230","231","232","233","234","235"],"import React, { createContext, useCallback, useContext, useState } from 'react';\r\nimport { io } from 'socket.io-client';\r\nimport { useHistory } from 'react-router';\r\nimport Notification from '../Components/Notification';\r\nimport { useUser } from './User';\r\n\r\ninterface ToastContextProps {\r\n  addToast({ id, sender, userName, message }: ToastProps): void;\r\n  removeToast(id: string): void;\r\n  acceptToRoom({ socketName, socketRoom }: RoomProps): void;\r\n  rejectRoom(id: string): void;\r\n}\r\nexport interface ToastProps {\r\n  id: string;\r\n  userName: string;\r\n  sender: string;\r\n  message?: string;\r\n  groupName?: string;\r\n}\r\n\r\ninterface FriendRoomProps {\r\n  friendName: string;\r\n  userName: string;\r\n  privateRoom: string;\r\n}\r\n\r\ninterface RoomProps {\r\n  id: string;\r\n  socketName?: string;\r\n  socketRoom?: string;\r\n}\r\n\r\nconst ToastContext = createContext<ToastContextProps>({} as ToastContextProps);\r\n\r\nexport const ToastProvider: React.FC = ({ children }) => {\r\n  const socket = io('localhost:3333');\r\n  const [toast, setToast] = useState<ToastProps[]>([]);\r\n  const [room, setRoom] = useState('');\r\n  const [chatData, setChatData] = useState<FriendRoomProps>(\r\n    {} as FriendRoomProps,\r\n  );\r\n  const { userData } = useUser();\r\n  const history = useHistory();\r\n\r\n  const addToast = useCallback(\r\n    async ({ id, sender, userName, message, groupName }: ToastProps) => {\r\n      const findToast = toast.find(\r\n        item => item.userName === userName && item.sender === sender,\r\n      );\r\n      if (!findToast) {\r\n        const newToast = { id, userName, sender, message, groupName };\r\n        setToast([...toast, newToast]);\r\n      }\r\n    },\r\n    [],\r\n  );\r\n  const removeToast = useCallback(\r\n    async (id: string) => {\r\n      const filterToast = toast.filter(item => item.id !== id);\r\n      setToast(filterToast);\r\n    },\r\n    [toast],\r\n  );\r\n\r\n  const acceptToRoom = useCallback(\r\n    ({ id, socketName, socketRoom }: RoomProps) => {\r\n      removeToast(id);\r\n      socket.emit('ClientAcceptToRoom', id, socketRoom, userData.user);\r\n    },\r\n    [removeToast, socket, userData.user],\r\n  );\r\n\r\n  const rejectRoom = useCallback(\r\n    (id: string) => {\r\n      socket.emit('ClientRejectRoom', id);\r\n      removeToast(id);\r\n    },\r\n    [removeToast, socket],\r\n  );\r\n\r\n  return (\r\n    <ToastContext.Provider\r\n      value={{ addToast, removeToast, acceptToRoom, rejectRoom }}\r\n    >\r\n      {children}\r\n      <Notification toast={toast} />\r\n    </ToastContext.Provider>\r\n  );\r\n};\r\n\r\nexport function useToast(): ToastContextProps {\r\n  const context = useContext(ToastContext);\r\n\r\n  if (!context) {\r\n    throw new Error('useToast must be used whitin an ToastProvider');\r\n  }\r\n  return context;\r\n}\r\n","D:\\heber\\Projetos\\ChatBot\\frontend\\src\\Components\\ModalConfetti\\styles.ts",[],"D:\\heber\\Projetos\\ChatBot\\frontend\\src\\Components\\ModalConfetti\\index.tsx",[],"D:\\heber\\Projetos\\ChatBot\\frontend\\src\\Components\\FadeScale\\styles.ts",[],"D:\\heber\\Projetos\\ChatBot\\frontend\\src\\index.tsx",[],"D:\\heber\\Projetos\\ChatBot\\frontend\\src\\Components\\Notification\\Toast\\index.tsx",[],{"ruleId":"236","severity":1,"message":"237","line":230,"column":7,"nodeType":"238","messageId":"239","endLine":230,"endColumn":18},{"ruleId":"240","replacedBy":"241"},{"ruleId":"242","replacedBy":"243"},{"ruleId":"244","replacedBy":"245"},{"ruleId":"246","replacedBy":"247"},{"ruleId":"248","replacedBy":"249"},{"ruleId":"250","severity":1,"message":"251","line":3,"column":10,"nodeType":"252","messageId":"253","endLine":3,"endColumn":21},{"ruleId":"250","severity":1,"message":"254","line":7,"column":3,"nodeType":"252","messageId":"253","endLine":7,"endColumn":13},{"ruleId":"250","severity":1,"message":"255","line":11,"column":10,"nodeType":"252","messageId":"253","endLine":11,"endColumn":16},{"ruleId":"250","severity":1,"message":"256","line":11,"column":18,"nodeType":"252","messageId":"253","endLine":11,"endColumn":23},{"ruleId":"250","severity":1,"message":"257","line":11,"column":25,"nodeType":"252","messageId":"253","endLine":11,"endColumn":33},{"ruleId":"250","severity":1,"message":"258","line":13,"column":10,"nodeType":"252","messageId":"253","endLine":13,"endColumn":20},{"ruleId":"250","severity":1,"message":"259","line":33,"column":3,"nodeType":"252","messageId":"253","endLine":33,"endColumn":23},{"ruleId":"250","severity":1,"message":"260","line":40,"column":3,"nodeType":"252","messageId":"253","endLine":40,"endColumn":23},{"ruleId":"250","severity":1,"message":"261","line":54,"column":5,"nodeType":"252","messageId":"253","endLine":54,"endColumn":12},{"ruleId":"250","severity":1,"message":"262","line":71,"column":10,"nodeType":"252","messageId":"253","endLine":71,"endColumn":27},{"ruleId":"250","severity":1,"message":"263","line":71,"column":29,"nodeType":"252","messageId":"253","endLine":71,"endColumn":49},{"ruleId":"240","replacedBy":"264"},{"ruleId":"242","replacedBy":"265"},{"ruleId":"244","replacedBy":"266"},{"ruleId":"246","replacedBy":"267"},{"ruleId":"248","replacedBy":"268"},{"ruleId":"240","replacedBy":"269"},{"ruleId":"242","replacedBy":"270"},{"ruleId":"244","replacedBy":"271"},{"ruleId":"246","replacedBy":"272"},{"ruleId":"248","replacedBy":"273"},{"ruleId":"250","severity":1,"message":"274","line":6,"column":8,"nodeType":"252","messageId":"253","endLine":6,"endColumn":20},{"ruleId":"250","severity":1,"message":"275","line":2,"column":3,"nodeType":"252","messageId":"253","endLine":2,"endColumn":11},{"ruleId":"236","severity":1,"message":"237","line":44,"column":7,"nodeType":"238","messageId":"239","endLine":44,"endColumn":18},{"ruleId":"236","severity":1,"message":"237","line":56,"column":7,"nodeType":"238","messageId":"239","endLine":56,"endColumn":18},{"ruleId":"250","severity":1,"message":"276","line":1,"column":10,"nodeType":"252","messageId":"253","endLine":1,"endColumn":23},{"ruleId":"250","severity":1,"message":"277","line":1,"column":25,"nodeType":"252","messageId":"253","endLine":1,"endColumn":31},{"ruleId":"250","severity":1,"message":"278","line":2,"column":17,"nodeType":"252","messageId":"253","endLine":2,"endColumn":26},{"ruleId":"250","severity":1,"message":"279","line":2,"column":28,"nodeType":"252","messageId":"253","endLine":2,"endColumn":36},{"ruleId":"250","severity":1,"message":"280","line":17,"column":3,"nodeType":"252","messageId":"253","endLine":17,"endColumn":24},{"ruleId":"250","severity":1,"message":"281","line":18,"column":3,"nodeType":"252","messageId":"253","endLine":18,"endColumn":9},{"ruleId":"250","severity":1,"message":"282","line":1,"column":18,"nodeType":"252","messageId":"253","endLine":1,"endColumn":21},{"ruleId":"250","severity":1,"message":"283","line":17,"column":10,"nodeType":"252","messageId":"253","endLine":17,"endColumn":21},{"ruleId":"250","severity":1,"message":"284","line":22,"column":5,"nodeType":"252","messageId":"253","endLine":22,"endColumn":13},{"ruleId":"250","severity":1,"message":"285","line":28,"column":5,"nodeType":"252","messageId":"253","endLine":28,"endColumn":18},{"ruleId":"250","severity":1,"message":"286","line":29,"column":5,"nodeType":"252","messageId":"253","endLine":29,"endColumn":18},{"ruleId":"250","severity":1,"message":"287","line":30,"column":5,"nodeType":"252","messageId":"253","endLine":30,"endColumn":16},{"ruleId":"250","severity":1,"message":"288","line":33,"column":5,"nodeType":"252","messageId":"253","endLine":33,"endColumn":15},{"ruleId":"250","severity":1,"message":"289","line":34,"column":5,"nodeType":"252","messageId":"253","endLine":34,"endColumn":16},{"ruleId":"250","severity":1,"message":"290","line":35,"column":5,"nodeType":"252","messageId":"253","endLine":35,"endColumn":18},{"ruleId":"250","severity":1,"message":"291","line":36,"column":5,"nodeType":"252","messageId":"253","endLine":36,"endColumn":21},{"ruleId":"250","severity":1,"message":"292","line":39,"column":5,"nodeType":"252","messageId":"253","endLine":39,"endColumn":19},{"ruleId":"250","severity":1,"message":"293","line":40,"column":5,"nodeType":"252","messageId":"253","endLine":40,"endColumn":27},{"ruleId":"250","severity":1,"message":"294","line":41,"column":5,"nodeType":"252","messageId":"253","endLine":41,"endColumn":21},{"ruleId":"250","severity":1,"message":"295","line":42,"column":5,"nodeType":"252","messageId":"253","endLine":42,"endColumn":18},{"ruleId":"250","severity":1,"message":"296","line":43,"column":5,"nodeType":"252","messageId":"253","endLine":43,"endColumn":17},{"ruleId":"236","severity":1,"message":"237","line":50,"column":5,"nodeType":"238","messageId":"239","endLine":50,"endColumn":16},{"ruleId":"236","severity":1,"message":"237","line":55,"column":5,"nodeType":"238","messageId":"239","endLine":55,"endColumn":16},{"ruleId":"236","severity":1,"message":"237","line":60,"column":5,"nodeType":"238","messageId":"239","endLine":60,"endColumn":16},{"ruleId":"250","severity":1,"message":"297","line":2,"column":10,"nodeType":"252","messageId":"253","endLine":2,"endColumn":16},{"ruleId":"250","severity":1,"message":"298","line":2,"column":18,"nodeType":"252","messageId":"253","endLine":2,"endColumn":25},{"ruleId":"250","severity":1,"message":"299","line":1,"column":29,"nodeType":"252","messageId":"253","endLine":1,"endColumn":40},{"ruleId":"236","severity":1,"message":"237","line":44,"column":9,"nodeType":"238","messageId":"239","endLine":44,"endColumn":20},{"ruleId":"236","severity":1,"message":"237","line":71,"column":7,"nodeType":"238","messageId":"239","endLine":71,"endColumn":18},{"ruleId":"236","severity":1,"message":"237","line":77,"column":7,"nodeType":"238","messageId":"239","endLine":77,"endColumn":18},{"ruleId":"236","severity":1,"message":"237","line":106,"column":5,"nodeType":"238","messageId":"239","endLine":106,"endColumn":16},{"ruleId":"236","severity":1,"message":"237","line":107,"column":5,"nodeType":"238","messageId":"239","endLine":107,"endColumn":16},{"ruleId":"250","severity":1,"message":"299","line":1,"column":17,"nodeType":"252","messageId":"253","endLine":1,"endColumn":28},{"ruleId":"250","severity":1,"message":"278","line":1,"column":30,"nodeType":"252","messageId":"253","endLine":1,"endColumn":39},{"ruleId":"250","severity":1,"message":"300","line":1,"column":41,"nodeType":"252","messageId":"253","endLine":1,"endColumn":47},{"ruleId":"236","severity":1,"message":"237","line":19,"column":7,"nodeType":"238","messageId":"239","endLine":19,"endColumn":18},{"ruleId":"301","severity":1,"message":"302","line":20,"column":7,"nodeType":"303","messageId":"239","endLine":20,"endColumn":54},{"ruleId":"250","severity":1,"message":"278","line":2,"column":17,"nodeType":"252","messageId":"253","endLine":2,"endColumn":26},{"ruleId":"250","severity":1,"message":"279","line":2,"column":28,"nodeType":"252","messageId":"253","endLine":2,"endColumn":36},{"ruleId":"250","severity":1,"message":"304","line":1,"column":10,"nodeType":"252","messageId":"253","endLine":1,"endColumn":18},{"ruleId":"250","severity":1,"message":"305","line":4,"column":7,"nodeType":"252","messageId":"253","endLine":4,"endColumn":15},{"ruleId":"250","severity":1,"message":"299","line":1,"column":17,"nodeType":"252","messageId":"253","endLine":1,"endColumn":28},{"ruleId":"250","severity":1,"message":"306","line":2,"column":10,"nodeType":"252","messageId":"253","endLine":2,"endColumn":21},{"ruleId":"250","severity":1,"message":"307","line":2,"column":23,"nodeType":"252","messageId":"253","endLine":2,"endColumn":32},{"ruleId":"250","severity":1,"message":"308","line":1,"column":18,"nodeType":"252","messageId":"253","endLine":1,"endColumn":27},{"ruleId":"250","severity":1,"message":"304","line":2,"column":10,"nodeType":"252","messageId":"253","endLine":2,"endColumn":18},{"ruleId":"250","severity":1,"message":"309","line":6,"column":10,"nodeType":"252","messageId":"253","endLine":6,"endColumn":17},{"ruleId":"250","severity":1,"message":"310","line":32,"column":6,"nodeType":"252","messageId":"253","endLine":32,"endColumn":16},{"ruleId":"236","severity":1,"message":"237","line":53,"column":5,"nodeType":"238","messageId":"239","endLine":53,"endColumn":16},{"ruleId":"250","severity":1,"message":"311","line":38,"column":10,"nodeType":"252","messageId":"253","endLine":38,"endColumn":14},{"ruleId":"250","severity":1,"message":"312","line":38,"column":16,"nodeType":"252","messageId":"253","endLine":38,"endColumn":23},{"ruleId":"250","severity":1,"message":"313","line":39,"column":10,"nodeType":"252","messageId":"253","endLine":39,"endColumn":18},{"ruleId":"250","severity":1,"message":"314","line":39,"column":20,"nodeType":"252","messageId":"253","endLine":39,"endColumn":31},{"ruleId":"250","severity":1,"message":"315","line":43,"column":9,"nodeType":"252","messageId":"253","endLine":43,"endColumn":16},{"ruleId":"316","severity":1,"message":"317","line":55,"column":5,"nodeType":"318","endLine":55,"endColumn":7,"suggestions":"319"},{"ruleId":"250","severity":1,"message":"320","line":66,"column":12,"nodeType":"252","messageId":"253","endLine":66,"endColumn":22},"no-console","Unexpected console statement.","MemberExpression","unexpected","lines-around-directive",["321"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"@typescript-eslint/no-unused-vars","'AiFillAudio' is defined but never used.","Identifier","unusedVar","'FaLockOpen' is defined but never used.","'FiLock' is defined but never used.","'FiMic' is defined but never used.","'FiUnlock' is defined but never used.","'useHistory' is defined but never used.","'ContainerAudioPlayer' is defined but never used.","'ContainerModalPrefix' is defined but never used.","'hangman' is assigned a value but never used.","'toggleModalPrefix' is assigned a value but never used.","'setToggleModalPrefix' is assigned a value but never used.",["321"],[],[],[],[],["321"],[],[],[],[],"'Notification' is defined but never used.","'Children' is defined but never used.","'useTransition' is defined but never used.","'config' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'openModalNotification' is defined but never used.","'styles' is defined but never used.","'css' is defined but never used.","'AudioPlayer' is defined but never used.","'allUsers' is assigned a value but never used.","'acceptRequest' is assigned a value but never used.","'rejectRequest' is assigned a value but never used.","'sendRequest' is assigned a value but never used.","'selectUser' is assigned a value but never used.","'selectUsers' is assigned a value but never used.","'multiRequests' is assigned a value but never used.","'removeSelectUser' is assigned a value but never used.","'openModalGroup' is assigned a value but never used.","'toggleModalCreateGroup' is assigned a value but never used.","'toggleModalGroup' is assigned a value but never used.","'backToFriends' is assigned a value but never used.","'backToSelect' is assigned a value but never used.","'purple' is defined but never used.","'purple2' is defined but never used.","'useCallback' is defined but never used.","'useRef' is defined but never used.","no-alert","Unexpected alert.","CallExpression","'animated' is defined but never used.","'upToDown' is assigned a value but never used.","'buttonGreen' is defined but never used.","'buttonRed' is defined but never used.","'keyframes' is defined but never used.","'useUser' is defined but never used.","'id' is defined but never used.","'room' is assigned a value but never used.","'setRoom' is assigned a value but never used.","'chatData' is assigned a value but never used.","'setChatData' is assigned a value but never used.","'history' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'toast'. Either include it or remove the dependency array. You can also do a functional update 'setToast(t => ...)' if you only need 'toast' in the 'setToast' call.","ArrayExpression",["322"],"'socketName' is defined but never used.","padding-line-between-statements",{"desc":"323","fix":"324"},"Update the dependencies array to be: [toast]",{"range":"325","text":"326"},[1648,1650],"[toast]"]